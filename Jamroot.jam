# Quickstart:
#
# Copy user-config.jam.example to user-config.jam and edit the
# settings to match your system.
#
# Install Boost, you will need iostreams with zlib support.
#
# Install Xerces
#
# Set BOOST_ROOT, under Linux/Cygwin this can be done e.g. by
# export BOOST_ROOT c:/boost_1_41_0
#
# Put bjam on your path. Under Linux/Cygwin this can be done e.g. by
# export PATH=${PATH}:/cygdrive/c/boost_1_41_0
#
# run bjam in the directory this file is in. It will compile everything,
# and then it will run the unit tests.

using testing ;
import os ;

include user-config.jam ;

project : requirements 
    <include>$(BOOST_INCLUDE) 
    <include>.
    <toolset>gcc:<cxxflags>"-Wno-multichar"
    <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
;

SOURCES = [ glob src/*.cpp ] ;

switch [ os.name ]
{
    case "CYGWIN" :
    case "NT" :
        lib zlib : : <file>$(BOOST_LIB)/libboost_zlib$(BL) ;
    case "LINUX" :
        lib zlib : : <file>/usr/lib/libz.so ;
}

lib xerces : : <file>$(XERCES_LIB)/$(XERCES_LIB_FILE) : : <include>$(XERCES_INCLUDE) ;
lib iostreams : zlib : <file>$(BOOST_LIB)/libboost_iostreams$(BL) ;
lib filesystem : : <file>$(BOOST_LIB)/libboost_filesystem$(BL) ;
lib datetime : : <file>$(BOOST_LIB)/libboost_date_time$(BL) ;
lib regexp : : <file>$(BOOST_LIB)/libboost_regex$(BL) ;
lib system : : <file>$(BOOST_LIB)/libboost_system$(BL) ;
lib unittest : : <file>$(BOOST_LIB)/libboost_unit_test_framework$(BL) ;

lib protean : 
   $(SOURCES)
   xerces filesystem iostreams datetime regexp system 
:
   <link>static
;

rule test-protean ( source * ) {
    return [
            unit-test
                thetest
            :
                $(source)
                protean 
                unittest
                xerces
            : # command
            : # input files
            :   <link>static
                <library-path>$(XERCES_LIB)
        ] ;
}

test-protean [ glob test/*.cpp ] ;
